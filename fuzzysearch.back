public void FuzzySearch() throws Exception {
		content = content.toLowerCase();
		String sc[] = content.split(" ");

		Class.forName("com.mysql.jdbc.Driver").newInstance();
		Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/paper", "wayne", "123456");
		PreparedStatement preState = null ;

		String sql = "select * from paper.list where ( author like ? OR " +
		                                              "title like ? OR " +
				                                      "publication like ? ) " ;

		ArrayList<String> temp = new ArrayList<String>();
		for(int k = 1; k < sc.length; k++) {
			if( !sc[k].equals("at") && !sc[k].equals("on") && !sc[k].equals("in") && 
				!sc[k].equals("by") && !sc[k].equals("for") && !sc[k].equals("of") && 
				!sc[k].equals("to") && !sc[k].equals("the") && !sc[k].equals("a") && 
				!sc[k].equals("an") && !sc[k].equals("and") ) {
				
				temp.add(sc[k]);
				sql += "union select * from paper.list where ( author like ? OR " +
                        "title like ? OR " +
                        "publication like ? ) " ;
			}
		}
	    
	    sql += " order by ((CASE WHEN author LIKE ? THEN 1.5 ELSE 0 END) + " +
	                      "(CASE WHEN title LIKE ? THEN 1 ELSE 0 END) + " +
	    		          "(CASE WHEN publication LIKE ? THEN 1.5 ELSE 0 END)" ;
	    
	    for(int k = 1; k < sc.length; k++) {
	    	if( !sc[k].equals("at") && !sc[k].equals("on") && !sc[k].equals("in") && 
					!sc[k].equals("by") && !sc[k].equals("for") && !sc[k].equals("of") && 
					!sc[k].equals("to") && !sc[k].equals("the") && !sc[k].equals("a") && 
					!sc[k].equals("an") && !sc[k].equals("and") ) {
	    		 sql += " + (CASE WHEN author LIKE ? THEN 1.5 ELSE 0 END) + " +
	                      "(CASE WHEN title LIKE ? THEN 1 ELSE 0 END) + " +
	    		          "(CASE WHEN publication LIKE ? THEN 1.5 ELSE 0 END)" ;
	    	}
	    }
	    
	    sql += ") DESC, year DESC, author ASC";

		preState = conn.prepareStatement(sql);
		preState.setString(1, "%" + sc[0] + "%");
		preState.setString(2, "%" + sc[0] + "%");
		preState.setString(3, "%" + sc[0] + "%");
		int index = 4 ;
		for( String each : temp ) {
			preState.setString(index, "%" + each + "%");
			index++;
		}
		preState.setString(index++, "%" + sc[0] + "%");
		preState.setString(index++, "%" + sc[0] + "%");
		preState.setString(index++, "%" + sc[0] + "%");
		for( String each : temp ) {
			preState.setString(index, "%" + each + "%");
			index++;
		}

		// finally
	    ResultSet rs = preState.executeQuery();
	    while(rs.next()) {
            Paper p = new Paper() ;

            // bib info
            p.setBib(rs.getString(2));
            p.setType(rs.getString(3));

            // basic info
            p.setAuthor(rs.getString(5));
            p.setTitle(rs.getString(6));
            p.setField(rs.getString(12));

            String abbr = rs.getString(8) ;
            if( rs.wasNull() )  abbr = "" ;

            String vol = rs.getString(9) ;
            if( rs.wasNull() )  vol = "" ;

            String no = rs.getString(10) ;
            if( rs.wasNull() )  no = "" ;

            String page = rs.getString(11) ;
            if( rs.wasNull() )  page = "" ;

            p.setPublication(rs.getString(7), abbr, vol, no, page, rs.getString(4));

            // doi and abstract
            String doi = rs.getString(13) ;
            if( rs.wasNull() )  doi = "" ;
            p.setDoi(doi);

            String abs = rs.getString(14) ;
            if(rs.wasNull())    abs = "" ;
            p.setAbstra(abs);
	    }
	}